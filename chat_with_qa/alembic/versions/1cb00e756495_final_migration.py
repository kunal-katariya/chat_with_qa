"""final_migration

Revision ID: 1cb00e756495
Revises: e5259dbc8352
Create Date: 2024-01-18 12:39:30.071897

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1cb00e756495'
down_revision: Union[str, None] = 'e5259dbc8352'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('conversation_bot_response_key', 'conversation', type_='unique')
    op.drop_constraint('conversation_id_key', 'conversation', type_='unique')
    op.drop_constraint('conversation_intent_key', 'conversation', type_='unique')
    op.drop_constraint('conversation_user_question_key', 'conversation', type_='unique')
    op.create_index(op.f('ix_conversation_id'), 'conversation', ['id'], unique=True)
    op.drop_constraint('intent_id_key', 'intent', type_='unique')
    op.drop_constraint('intent_question_pattern_key', 'intent', type_='unique')
    op.drop_constraint('intent_question_tag_key', 'intent', type_='unique')
    op.drop_constraint('intent_response_answer_key', 'intent', type_='unique')
    op.create_index(op.f('ix_intent_id'), 'intent', ['id'], unique=True)
    op.drop_constraint('unanswered_question_id_key', 'unanswered_question', type_='unique')
    op.drop_constraint('unanswered_question_is_resolved_key', 'unanswered_question', type_='unique')
    op.drop_constraint('unanswered_question_user_question_key', 'unanswered_question', type_='unique')
    op.create_index(op.f('ix_unanswered_question_id'), 'unanswered_question', ['id'], unique=True)
    op.drop_constraint('user_id_key', 'user', type_='unique')
    op.drop_constraint('user_is_active_key', 'user', type_='unique')
    op.drop_constraint('user_name_key', 'user', type_='unique')
    op.drop_constraint('user_password_key', 'user', type_='unique')
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.create_unique_constraint('user_password_key', 'user', ['password'])
    op.create_unique_constraint('user_name_key', 'user', ['name'])
    op.create_unique_constraint('user_is_active_key', 'user', ['is_active'])
    op.create_unique_constraint('user_id_key', 'user', ['id'])
    op.drop_index(op.f('ix_unanswered_question_id'), table_name='unanswered_question')
    op.create_unique_constraint('unanswered_question_user_question_key', 'unanswered_question', ['user_question'])
    op.create_unique_constraint('unanswered_question_is_resolved_key', 'unanswered_question', ['is_resolved'])
    op.create_unique_constraint('unanswered_question_id_key', 'unanswered_question', ['id'])
    op.drop_index(op.f('ix_intent_id'), table_name='intent')
    op.create_unique_constraint('intent_response_answer_key', 'intent', ['response_answer'])
    op.create_unique_constraint('intent_question_tag_key', 'intent', ['question_tag'])
    op.create_unique_constraint('intent_question_pattern_key', 'intent', ['question_pattern'])
    op.create_unique_constraint('intent_id_key', 'intent', ['id'])
    op.drop_index(op.f('ix_conversation_id'), table_name='conversation')
    op.create_unique_constraint('conversation_user_question_key', 'conversation', ['user_question'])
    op.create_unique_constraint('conversation_intent_key', 'conversation', ['intent'])
    op.create_unique_constraint('conversation_id_key', 'conversation', ['id'])
    op.create_unique_constraint('conversation_bot_response_key', 'conversation', ['bot_response'])
    # ### end Alembic commands ###
